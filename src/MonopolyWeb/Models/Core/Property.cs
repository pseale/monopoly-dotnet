using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace MonopolyWeb.Models.Core
{
  public class Property
  {
    public Property() { } //required for EF
    public Property(string propertyName, int salePrice)
    {
      PropertyName = propertyName;
      SalePrice = salePrice;
    }

    [Key, DatabaseGenerated(DatabaseGeneratedOption.Identity)]
    public Guid Id { get; set; } //EF requires a key that is generated by the db, not sure why. Giving up and adding an unnecessary field.
    public string PropertyName { get; set; }
    public int SalePrice { get; set; }
    public int Rent { get { return SalePrice/10; } }

    protected bool Equals(Property other)
    {
      return string.Equals(PropertyName, other.PropertyName) && SalePrice == other.SalePrice;
    }

    public override int GetHashCode()
    {
      unchecked
      {
        return ((PropertyName != null ? PropertyName.GetHashCode() : 0) * 397) ^ SalePrice;
      }
    }

    public override bool Equals(object obj)
    {
      if (ReferenceEquals(null, obj)) return false;
      if (ReferenceEquals(this, obj)) return true;
      if (obj.GetType() != this.GetType()) return false;
      return Equals((Property) obj);
    }
  }
}